{"ast":null,"code":"import _regeneratorRuntime from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/src/components/App.js\";\n// Imports - React\nimport React, { Component } from \"react\"; // Imports - Redux\n\nimport connect from \"react-redux/es/connect/connect\"; // Imports - Frameworks (Semantic-UI and Material-UI)\n\nimport { Container, Message } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core\"; // Imports - Initialize Enigma\n\nimport getEnigmaInit from \"../utils/getEnigmaInit.js\"; // Imports - Components\n\nimport Header from \"./Header\";\nimport MillionairesProblem from './MillionairesProblem';\nimport \"../App.css\"; // Imports - Actions (Redux)\n\nimport { initializeEnigma, initializeAccounts, deployMillionairesProblem } from '../actions';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary\n    }\n  };\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var enigma, accounts, secretContractCount, deployedMillionairesProblemAddress;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getEnigmaInit();\n\n              case 2:\n                enigma = _context.sent;\n                // Create redux action to initialize set state variable containing enigma-js client library\n                this.props.initializeEnigma(enigma); // Initialize unlocked accounts\n\n                _context.next = 6;\n                return enigma.web3.eth.getAccounts();\n\n              case 6:\n                accounts = _context.sent;\n                // Create redux action to initialize set state variable containing unlocked accounts\n                this.props.initializeAccounts(accounts);\n                _context.next = 10;\n                return enigma.enigmaContract.methods.countSecretContracts().call();\n\n              case 10:\n                secretContractCount = _context.sent;\n                _context.next = 13;\n                return enigma.enigmaContract.methods.getSecretContractAddresses(secretContractCount - 1, secretContractCount).call();\n\n              case 13:\n                deployedMillionairesProblemAddress = _context.sent[0];\n                // Create redux action to set state variable containing deployed millionaires' problem secret contract address\n                this.props.deployMillionairesProblem(deployedMillionairesProblemAddress);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.enigma) {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(Message, {\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Enigma setup still loading...\"));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(Paper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(MillionairesProblem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }))));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    enigma: state.enigma\n  };\n};\n\nexport default connect(mapStateToProps, {\n  initializeEnigma: initializeEnigma,\n  initializeAccounts: initializeAccounts,\n  deployMillionairesProblem: deployMillionairesProblem\n})(withStyles(styles)(App));","map":{"version":3,"sources":["/home/buidl-test1/enigma-test/millionaires_problem_demo/client/src/components/App.js"],"names":["React","Component","connect","Container","Message","Paper","withStyles","getEnigmaInit","Header","MillionairesProblem","initializeEnigma","initializeAccounts","deployMillionairesProblem","styles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","App","props","enigma","web3","eth","getAccounts","accounts","enigmaContract","methods","countSecretContracts","call","secretContractCount","getSecretContractAddresses","deployedMillionairesProblemAddress","mapStateToProps","state"],"mappings":"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","sourcesContent":["// Imports - React\nimport React, { Component } from \"react\";\n// Imports - Redux\nimport connect from \"react-redux/es/connect/connect\";\n// Imports - Frameworks (Semantic-UI and Material-UI)\nimport { Container, Message } from \"semantic-ui-react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { withStyles } from \"@material-ui/core\";\n// Imports - Initialize Enigma\nimport getEnigmaInit from \"../utils/getEnigmaInit.js\";\n// Imports - Components\nimport Header from \"./Header\";\nimport MillionairesProblem from './MillionairesProblem';\nimport \"../App.css\";\n// Imports - Actions (Redux)\nimport { initializeEnigma, initializeAccounts, deployMillionairesProblem } from '../actions';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        // Initialize enigma-js client library (including web3)\n        const enigma = await getEnigmaInit();\n        // Create redux action to initialize set state variable containing enigma-js client library\n        this.props.initializeEnigma(enigma);\n        // Initialize unlocked accounts\n        const accounts = await enigma.web3.eth.getAccounts();\n        // Create redux action to initialize set state variable containing unlocked accounts\n        this.props.initializeAccounts(accounts);\n        const secretContractCount = await enigma.enigmaContract.methods.countSecretContracts().call();\n        const deployedMillionairesProblemAddress = (await enigma.enigmaContract.methods\n            .getSecretContractAddresses(secretContractCount-1, secretContractCount).call())[0];\n        // Create redux action to set state variable containing deployed millionaires' problem secret contract address\n        this.props.deployMillionairesProblem(deployedMillionairesProblemAddress);\n    }\n\n    render() {\n        if (!this.props.enigma) {\n            return (\n                <div className=\"App\">\n                    <Header/>\n                    <Message color=\"red\">Enigma setup still loading...</Message>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className='App'>\n                    <Header />\n                    <br />\n                    <Container>\n                        <Paper>\n                            <MillionairesProblem />\n                        </Paper>\n                    </Container>\n                </div>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { enigma: state.enigma }\n};\n\nexport default connect(\n    mapStateToProps,\n    { initializeEnigma, initializeAccounts, deployMillionairesProblem }\n)(withStyles(styles)(App));\n\n"]},"metadata":{},"sourceType":"module"}