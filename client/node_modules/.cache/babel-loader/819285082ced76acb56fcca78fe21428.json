{"ast":null,"code":"import _regeneratorRuntime from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/buidl-test1/enigma-test/millionaires_problem_demo/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport getWeb3 from './getWeb3';\nimport { Enigma } from 'enigma-js';\nexport default\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var web3, EnigmaContract, EnigmaTokenContract, enigma;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return getWeb3();\n\n        case 3:\n          web3 = _context.sent;\n          EnigmaContract = require('../build/enigma_contracts/EnigmaSimulation.json');\n          EnigmaTokenContract = require('../build/enigma_contracts/EnigmaToken.json');\n          _context.t0 = Enigma;\n          _context.t1 = web3;\n          _context.t2 = EnigmaContract.networks['4447'].address;\n          _context.t3 = EnigmaTokenContract.networks['4447'].address;\n          _context.next = 12;\n          return web3.eth.getAccounts();\n\n        case 12:\n          _context.t4 = _context.sent[0];\n          _context.t5 = {\n            gas: 4712388,\n            gasPrice: 100000000000,\n            from: _context.t4\n          };\n          enigma = new _context.t0(_context.t1, _context.t2, _context.t3, 'http://localhost:3346', _context.t5);\n          enigma.admin();\n          return _context.abrupt(\"return\", enigma);\n\n        case 19:\n          _context.prev = 19;\n          _context.t6 = _context[\"catch\"](0);\n          // Catch any errors for any of the above operations.\n          console.log(_context.t6);\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[0, 19]]);\n}));","map":{"version":3,"sources":["/home/buidl-test1/enigma-test/millionaires_problem_demo/client/src/utils/getEnigmaInit.js"],"names":["getWeb3","Enigma","web3","EnigmaContract","require","EnigmaTokenContract","networks","address","eth","getAccounts","gas","gasPrice","from","enigma","admin","console","log"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA;AAAA;AAAA;AAAA;AAAA,yBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGYD,OAAO,EAHnB;;AAAA;AAGDE,UAAAA,IAHC;AAKDC,UAAAA,cALC,GAKgBC,OAAO,CAAC,iDAAD,CALvB;AAMDC,UAAAA,mBANC,GAMqBD,OAAO,CAAC,4CAAD,CAN5B;AAAA,wBAOYH,MAPZ;AAAA,wBAQHC,IARG;AAAA,wBASHC,cAAc,CAACG,QAAf,CAAwB,MAAxB,EAAgCC,OAT7B;AAAA,wBAUHF,mBAAmB,CAACC,QAApB,CAA6B,MAA7B,EAAqCC,OAVlC;AAAA;AAAA,iBAecL,IAAI,CAACM,GAAL,CAASC,WAAT,EAfd;;AAAA;AAAA,sCAesC,CAftC;AAAA;AAaCC,YAAAA,GAbD,EAaM,OAbN;AAcCC,YAAAA,QAdD,EAcW,YAdX;AAeCC,YAAAA,IAfD;AAAA;AAODC,UAAAA,MAPC,0DAWH,uBAXG;AAkBPA,UAAAA,MAAM,CAACC,KAAP;AAlBO,2CAmBAD,MAnBA;;AAAA;AAAA;AAAA;AAqBP;AACAE,UAAAA,OAAO,CAACC,GAAR;;AAtBO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf","sourcesContent":["import getWeb3 from './getWeb3';\nimport { Enigma } from 'enigma-js';\n\nexport default async () => {\n    try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n\n        const EnigmaContract = require('../build/enigma_contracts/EnigmaSimulation.json');\n        const EnigmaTokenContract = require('../build/enigma_contracts/EnigmaToken.json');\n        const enigma = new Enigma(\n            web3,\n            EnigmaContract.networks['4447'].address,\n            EnigmaTokenContract.networks['4447'].address,\n            'http://localhost:3346',\n            {\n                gas: 4712388,\n                gasPrice: 100000000000,\n                from: (await web3.eth.getAccounts())[0],\n            },\n        );\n        enigma.admin();\n        return enigma;\n    } catch (error) {\n        // Catch any errors for any of the above operations.\n        console.log(error);\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}