{"ast":null,"code":"// Redux action for when enigma-js client library has been initialized\nexport var initializeEnigma = function initializeEnigma(enigma) {\n  return {\n    type: 'ENIGMA_INITIALIZED',\n    payload: enigma\n  };\n}; // Redux action for when web3 accounts have been initialized\n\nexport var initializeAccounts = function initializeAccounts(accounts) {\n  return {\n    type: 'ACCOUNTS_INITIALIZED',\n    payload: accounts\n  };\n}; // Redux action for when millionaires problem has been deployed to a particular address\n\nexport var deployMillionairesProblem = function deployMillionairesProblem(deployedMillionairesProblem) {\n  return {\n    type: 'MILLIONAIRES_PROBLEM_DEPLOYED',\n    payload: deployedMillionairesProblem\n  };\n}; // Redux action for when richest millionaire's address has been computed\n\nexport var computeRichestMillionaire = function computeRichestMillionaire(richestMillionaire) {\n  return {\n    type: 'RICHEST_MILLIONAIRE_COMPUTED',\n    payload: richestMillionaire\n  };\n}; // Redux action for notification message has been sent for snackbar display\n\nexport var notifyMessage = function notifyMessage(notification) {\n  return {\n    type: 'MESSAGE_NOTIFIED',\n    payload: notification\n  };\n};","map":{"version":3,"sources":["/home/buidl-test1/enigma-test/millionaires_problem_demo/client/src/actions/index.js"],"names":["initializeEnigma","enigma","type","payload","initializeAccounts","accounts","deployMillionairesProblem","deployedMillionairesProblem","computeRichestMillionaire","richestMillionaire","notifyMessage","notification"],"mappings":"AACA;AACA,OAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAE,oBADH;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAC5C,SAAO;AACHH,IAAAA,IAAI,EAAE,sBADH;AAEHC,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,2BAAD,EAAiC;AACtE,SAAO;AACHL,IAAAA,IAAI,EAAE,+BADH;AAEHC,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACC,kBAAD,EAAwB;AAC7D,SAAO;AACHP,IAAAA,IAAI,EAAE,8BADH;AAEHC,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM,C,CAOP;;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,YAAD,EAAkB;AAC3C,SAAO;AACHT,IAAAA,IAAI,EAAE,kBADH;AAEHC,IAAAA,OAAO,EAAEQ;AAFN,GAAP;AAIH,CALM","sourcesContent":["\n// Redux action for when enigma-js client library has been initialized\nexport const initializeEnigma = (enigma) => {\n    return {\n        type: 'ENIGMA_INITIALIZED',\n        payload: enigma\n    };\n};\n\n// Redux action for when web3 accounts have been initialized\nexport const initializeAccounts = (accounts) => {\n    return {\n        type: 'ACCOUNTS_INITIALIZED',\n        payload: accounts\n    };\n};\n\n// Redux action for when millionaires problem has been deployed to a particular address\nexport const deployMillionairesProblem = (deployedMillionairesProblem) => {\n    return {\n        type: 'MILLIONAIRES_PROBLEM_DEPLOYED',\n        payload: deployedMillionairesProblem\n    };\n};\n\n// Redux action for when richest millionaire's address has been computed\nexport const computeRichestMillionaire = (richestMillionaire) => {\n    return {\n        type: 'RICHEST_MILLIONAIRE_COMPUTED',\n        payload: richestMillionaire\n    };\n};\n\n// Redux action for notification message has been sent for snackbar display\nexport const notifyMessage = (notification) => {\n    return {\n        type: 'MESSAGE_NOTIFIED',\n        payload: notification\n    };\n};\n"]},"metadata":{},"sourceType":"module"}